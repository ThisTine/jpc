import { ibmBold } from "@/utils/fonts";
import {
  FormControl,
  FormHelperText,
  OutlinedInput,
  Stack,
  TextField,
  Typography,
} from "@mui/material";
import React from "react";
import { FormProvider, UseFormReturn } from "react-hook-form";
import RegisterTestSingleChoice from "../register/RegisterTest/RegisterTestSingleChoice";
import { PersonalInfoFormData } from "@/app/personalInfo/page";
import TextFieldMasked from "../register/RegisterProfile/RegisterProfilePhone";

interface PersonalInfoProps {
  form: UseFormReturn<PersonalInfoFormData, any, undefined>;
}

const PersonalInfo2: React.FC<PersonalInfoProps> = ({ form }) => {
  return (
    <FormProvider {...form}>
      <Stack width="100%" gap={4}>
        <Typography
          fontSize="24px"
          color="#2D73AE"
          sx={{
            alignSelf: "center",
            my: "1rem",
            fontFamily: ibmBold.style.fontFamily,
          }}
        >
          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
        </Typography>
        <Typography color="#3E3C3D">
          Part 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á
        </Typography>
        <Stack width="100%">
          <Typography className="text-lg">üåü ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á</Typography>
          <TextField
            variant="outlined"
            fullWidth
            placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö*"
            error={!!form.formState.errors.parentName}
            helperText={form.formState.errors.parentName?.message}
            {...form.register("parentName")}
          />
        </Stack>
        <Stack width="100%">
          <FormControl fullWidth variant="outlined">
            <Typography className="text-lg">üåü ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á</Typography>
            <OutlinedInput
              fullWidth
              placeholder="0XX-XXX-XXXX"
              error={!!form.formState.errors.parentPhone}
              inputComponent={TextFieldMasked as any}
              {...form.register("parentPhone")}
            />
            <FormHelperText error={!!form.formState.errors.parentPhone}>
              {form.formState.errors.parentPhone?.message}
            </FormHelperText>
          </FormControl>
        </Stack>
        <Stack width="100%">
          <Typography className="text-lg">
            üåü ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô
          </Typography>
          <TextField
            variant="outlined"
            fullWidth
            placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö*"
            error={!!form.formState.errors.relationship}
            helperText={form.formState.errors.relationship?.message}
            {...form.register("relationship")}
          />
        </Stack>
        <Stack width="100%">
          <Typography className="text-lg">
            üåü ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ (‡∏Å‡∏£‡∏ì‡∏µ‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô)
          </Typography>
          <TextField
            variant="outlined"
            fullWidth
            placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö*"
            error={!!form.formState.errors.emergencyName}
            helperText={form.formState.errors.emergencyName?.message}
            {...form.register("emergencyName")}
          />
        </Stack>
        <Stack width="100%">
          <FormControl fullWidth variant="outlined">
            <Typography className="text-lg"> üåü ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</Typography>
            <OutlinedInput
              fullWidth
              placeholder="0XX-XXX-XXXX"
              error={!!form.formState.errors.emergencyPhone}
              inputComponent={TextFieldMasked as any}
              {...form.register("emergencyPhone")}
            />
            <FormHelperText error={!!form.formState.errors.emergencyPhone}>
              {form.formState.errors.emergencyPhone?.message}
            </FormHelperText>
          </FormControl>
        </Stack>
        <Stack width="100%">
          <RegisterTestSingleChoice
            title="üåü ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (200‡∏ø/‡∏Ñ‡∏∑‡∏ô)"
            name="isStay"
            choices={[
              { id: "1", title: "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" },
              { id: "2", title: "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" },
            ]}
          />
        </Stack>
      </Stack>
    </FormProvider>
  );
};

export default PersonalInfo2;
